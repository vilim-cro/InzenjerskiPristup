U nastavku se nalaze niz zadataka sortiranih prema prioritetu.
Ideja je da sami odabirete zadatke koje ćete raditi,
napišete svoje ime i naznačite kad ste gotovi s plusom.


Primjer:

Dodavanje zadatka:
1. napisati view za promjenu lozinke

Preuzimanje zadatka:
1. napisati view za promjenu lozinke: Vilim

Završetak zadatka:
1. napisati view za promjenu lozinke: Vilim +


ZADACI:

Dijagrami:
1. Dijagram stanja
2. Dijagram aktivnosti
3. Dijagram komponenti
4. Dijagram razmještaja
5. Implementacijski dijagram razreda


Ostala dokumentacija:
1. Korištene tehnologije i alati
2. Ispitivanje programskog rješenja
3. Upute za puštanje u pogon


Frontend:

1. Dodat component za promjenu šifre: Šelendić +
    - form za koji se šalje PUT request na korisnici/promjeniLozinku
    - atributi su trenutnaLozinka, novaLozinka
    - ako je response 200 -> uspješno promijenjena lozinka, inače javi grešku
    - redirect na login

2. Dodat da se nakon "Skeniraj novi dokument" korisnik redirecta na "Povijest skeniranja": Čupić +
    - ideja je da tamo onda može označiti dokumente kao točno/netočno skenirane

3. Dodat da se u povijest skeniranja može vidjeti točnost skeniranja i dodijeljen revizor: Čupić +
    - mora se moći otvoriti slika dokumenta i tekst dokumenta i vidjet da li mu je dodijeljen revizor i ako je tko 
    - ako još nije označena točnost (vrijednost točnostSkeniranja je NULL u bazi), onda opcija za označiti ga kao točnog/netočnog
        -> šalje se PUT request na dokumenti/označiTočnostSkeniranja/{dokument_id} s varijablom točnostSkeniranja = 0/1 (zadan u bodyu)
        -> ako je response 200 -> vizualno ga označi kao točnog/netočnog, inače javi grešku
    - ako je označen kao točan, mogućnost dodijele revizora putem padajućeg izbornika s revizorima
        -> dohvati revizore na dokumenti/dohvatiKorisnikeGrupe/{ime_grupe} -> response.korisnici
        -> šalje se PUT request na dokumenti/dodijeliRevizora/{dokument_id} s varijablom revizor_id (zadan u bodyu)
        -> ako je response 200 -> vizualno označi da mu je dodijeljen revizor, inače javi grešku
    - možda dodat posebnu funkcionalnost ako revizor skenira da je odmah potvrđen

4. Dodat funkcionalnost za "pristigli dokumenti": Pipić +
    - šalje se GET na poseban url za svaku grupu: dokumentiZaReviziju/, dokumentiZaPotvrdu/, dokumentiZaPotpis/
    - view vraća dokumente koji su dodijeljeni korisniku
    - opcije za "Potvrdi", "Potpiši" ili (arhiviraj/posaljiNaPotpis) ovisno o grupi korisnika
    - revizor prvo klikne "Potvrdi" zatim odabire računovođu (samo iz grupe za tu vrstu dokumenta), dokument nestaje sa stranice
        -> šalje se PUT request na dokumenti/potvrdi/{dokument_id}
        -> šalje se PUT request na dokumenti/dodijeliRačunovođu/{dokument_id} s varijablom računovođa_id (zadan u bodyu)
    - računovođa ili:
        -> arhivira dokument (šalje se PUT request na dokumenti/arhiviraj/{dokument_id})
        -> odabire Direktora za potpis (šalje se PUT request na dokumenti/dodijeliDirektora/{dokument_id} s varijablom direktor_id (zadan u bodyu))
    - direktor klikne "Potpiši"
        -> šalje se PUT request na dokumenti/potpiši/{dokument_id}
    

5. Dodat component za statistiku za zaposlenike: Šelendić +
    - u obliku tablice, grafova?

6. Dodat styling za komponente: Čupić, Pipić, Šelendić +

7. objava dokumenta na društvenoj mreži: Šelendić +


Backend:

1. dodat view za označiTočnostSkeniranja
    - prima id dokumenta preko url-a i točnost skeniranja preko bodya
    - ako je točnost skeniranja 1, onda se dokument označava kao točno skeniran
    - ako je točnost skeniranja 0, onda se dokument označava kao netočno skeniran
    - vraća 200 ako je sve ok, inače vraća 400 -> koristi Response()

3. dodat viewove potvrdi, potpiši
    - prima id dokumenta preko url-a
    - mijenja stanje na true
    - vraća 200 ako je sve ok, inače vraća 400 -> koristi Response()

3. dodat viewove dodijeliRevizora, dodijeliRačunovođu, dodijeliDirektora
    - prima id dokumenta preko url-a i id korisnika kojeg treba dodijeliti preko bodya
    - dodjeljuje korisnika dokumentu
    - vraća 200 ako je sve ok, inače vraća 400 -> koristi Response()

4. dodat view za arhiviranje
    - stvara novu arhivu sa podacima iz dokumenta
    - briše dokument
    - vraća 200 ako je sve ok, inače vraća 400 -> koristi Response()
